//------------------------------------------------------------------------------
// <auto-generated>
//     Codice generato da un modello.
//
//     Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//     Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabDbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class LabDbEntities : DbContext
    {
        public LabDbEntities()
            : base("name=LabDbEntities")
        {
        }

        public LabDbEntities(string name) : base(name)
        {

        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aspect> Aspects { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<Colour> Colours { get; set; }
        public virtual DbSet<ExternalConstruction> ExternalConstructions { get; set; }
        public virtual DbSet<ExternalReportFile> ExternalReportFiles { get; set; }
        public virtual DbSet<ExternalReport> ExternalReports { get; set; }
        public virtual DbSet<MasterD> MasterDs { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<Method> Methods { get; set; }
        public virtual DbSet<OrganizationD> OrganizationDs { get; set; }
        public virtual DbSet<PersonD> PersonDs { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<Recipe> Recipes { get; set; }
        public virtual DbSet<ReportFile> ReportFiles { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<Requirement> Requirements { get; set; }
        public virtual DbSet<Sample> Samples { get; set; }
        public virtual DbSet<SpecificationVersion> SpecificationVersions { get; set; }
        public virtual DbSet<Specification> Specifications { get; set; }
        public virtual DbSet<StandardFile> StandardFiles { get; set; }
        public virtual DbSet<Std> Stds { get; set; }
        public virtual DbSet<SubRequirement> SubRequirements { get; set; }
        public virtual DbSet<SubTest> SubTests { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<Test> Tests { get; set; }
        public virtual DbSet<UserD> UserDs { get; set; }
        public virtual DbSet<MaterialType> MaterialTypes { get; set; }
        public virtual DbSet<TaskItem> TaskItems { get; set; }
        public virtual DbSet<UserRoleMappingD> UserRoleMappingDs { get; set; }
        public virtual DbSet<UserRoleD> UserRoleDs { get; set; }
        public virtual DbSet<ControlPlan> ControlPlans { get; set; }
        public virtual DbSet<CalibrationFiles> CalibrationFiles { get; set; }
        public virtual DbSet<CalibrationReport> CalibrationReports { get; set; }
        public virtual DbSet<InstrumentType> InstrumentTypes { get; set; }
        public virtual DbSet<Instrument> Instruments { get; set; }
        public virtual DbSet<OrganizationRoleMappingD> OrganizationRoleMappingDs { get; set; }
        public virtual DbSet<OrganizationRoleD> OrganizationRoleDs { get; set; }
        public virtual DbSet<InstrumentMaintenanceEvent> InstrumentMaintenanceEvents { get; set; }
        public virtual DbSet<SubMethod> SubMethods { get; set; }
        public virtual DbSet<PersonRoleMappingD> PersonRoleMappingDs { get; set; }
        public virtual DbSet<PersonRoleD> PersonRoleDs { get; set; }
        public virtual DbSet<SubTaskItem> SubTaskItems { get; set; }
        public virtual DbSet<MaterialLine> MaterialLines { get; set; }
        public virtual DbSet<TrialArea> TrialAreas { get; set; }
        public virtual DbSet<InstrumentUtilizationArea> InstrumentUtilizationAreas { get; set; }
        public virtual DbSet<MeasurementUnit> MeasurementUnits { get; set; }
        public virtual DbSet<InstrumentMeasurableProperty> InstrumentMeasurableProperties { get; set; }
        public virtual DbSet<MeasurableQuantity> MeasurableQuantities { get; set; }
        public virtual DbSet<CalibrationReportInstrumentPropertyMapping> CalibrationReportInstrumentPropertyMappings { get; set; }
        public virtual DbSet<CalibrationResult> CalibrationResults { get; set; }
        public virtual DbSet<InstrumentFiles> InstrumentFiles { get; set; }
        public virtual DbSet<ControlPlanItem> ControlPlanItems { get; set; }
        public virtual DbSet<TestRecord> TestRecords { get; set; }
        public virtual DbSet<TestRecordType> TestRecordTypes { get; set; }
        public virtual DbSet<MethodVariant> MethodVariants { get; set; }
    }
}
