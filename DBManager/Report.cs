//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBManager
{
    using System;
    using System.Collections.Generic;
    
    public partial class Report
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Report()
        {
            this.ReportFiles = new HashSet<ReportFile>();
            this.Tests = new HashSet<Test>();
        }
    
        public int ID { get; set; }
        public int AuthorID { get; set; }
        public int BatchID { get; set; }
        public string Category { get; set; }
        public string Description { get; set; }
        public Nullable<System.DateTime> EndDate { get; set; }
        public int Number { get; set; }
        public int SpecificationVersionID { get; set; }
        public string StartDate { get; set; }
        public bool IsComplete { get; set; }
        public Nullable<int> SpecificationIssueID { get; set; }
        public Nullable<int> ParentTaskID { get; set; }
    
        public virtual Batch Batch { get; set; }
        public virtual Person Author { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ReportFile> ReportFiles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Test> Tests { get; set; }
        public virtual SpecificationVersion SpecificationVersion { get; set; }
        public virtual StandardIssue SpecificationIssues { get; set; }
        public virtual Task ParentTask { get; set; }
    }
}
